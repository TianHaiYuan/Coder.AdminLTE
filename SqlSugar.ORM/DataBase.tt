<#@ template language="C#" hostspecific="True" debug="false"#>
<#@include file="Manager.ttinclude"#>
<#@ assembly name="System" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Data.DataSetExtensions" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>
<#
  //你的当前model的命名空间
            string ModelNameSpace="SqlSugar.ORM";
  //你的数据库连接字符串
            string ConnectStr = "Data Source=.;database=TestDb; USER ID=sa;PASSWORD=123456;integrated Security =true;";
            SqlConnection MySqlConnection = new SqlConnection(ConnectStr);
            //此sql语句找到你指定数据库下的所有表
            string SelectYourTableNameStr = "SELECT * FROM sys.sysobjects WHERE TYPE='U'";
            SqlDataAdapter MySqlDataAdapter = new SqlDataAdapter(SelectYourTableNameStr, MySqlConnection);
            DataSet MyDataSet = new DataSet();
            MySqlDataAdapter.Fill(MyDataSet, "cacheTable");
            //得到table表
            DataTable MyDataTable = MyDataSet.Tables["cacheTable"];
            int MyDataTableRowsCount = MyDataTable.Rows.Count;
            for (int i = 0; i < MyDataTableRowsCount; i++)
            {
                //表名
                //MyDataTable.Rows[i]["name"].ToString();
                //此sql语句找到你当前表下的所有键值，属性，是否为null，长度。
                string SelectYourKeyStr = @"SELECT syscolumns.name as keyname,systypes.name as keyproperty,syscolumns.isnullable,syscolumns.length 
                                            FROM syscolumns, systypes 
                                            WHERE syscolumns.xusertype = systypes.xusertype 
                                            AND syscolumns.id = object_id('"+ MyDataTable.Rows[i]["name"].ToString() + "')";
                MySqlDataAdapter = new SqlDataAdapter(SelectYourKeyStr, MySqlConnection);
                 MyDataSet = new DataSet();
                MySqlDataAdapter.Fill(MyDataSet, "cacheTable");
                //得到key表
                DataTable MyKeyTable = MyDataSet.Tables["cacheTable"];
                //tt模板输出文件
                manager.StartNewFile(MyDataTable.Rows[i]["name"].ToString() +".cs");
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
namespace <#=ModelNameSpace#>
{
    public  partial class <#=MyDataTable.Rows[i]["name"].ToString()#>
    {
<#              for (int keyi = 0; keyi < MyKeyTable.Rows.Count; keyi++)
                {
                    //key名
                    //MyKeyTable.Rows[keyi]["keyname"].ToString();
                    //属性
                    //MyKeyTable.Rows[keyi]["keyproperty"].ToString().ToLower();
                    //是否null
                    //MyKeyTable.Rows[keyi]["isnullable"].ToString();

                    //整型：tinyint   smallint     int    bigint
                    //精确型：decimal   numeric   
                    //近似型 float    real     
                    //日期类型：datetime   
                    // 特殊数据型  cursor timestamp   uniqueidentifier    
                    //货币型smallmoney    money

                    //输出的C#属性
                    string keypropertyOutput = string.Empty;


                    switch (MyKeyTable.Rows[keyi]["keyproperty"].ToString().ToLower())
                    {
                        case "smallint":
                            keypropertyOutput = "short";
                            break;
                        case "int":
                            keypropertyOutput = "int";
                            break;
                        case "bigint":
                            keypropertyOutput = "long";
                            break;
                        case "real":
                            keypropertyOutput = "float";
                            break;
                        case "float":
                            keypropertyOutput = "double";
                            break;
                        case "money":
                            keypropertyOutput = "decimal";
                            break;
                        case "datetime":
                            keypropertyOutput = "DateTime";
                            break;
                        case "uniqueidentifier":
                            keypropertyOutput = "Guid";
                            break;

                        case "bit":
                            keypropertyOutput = "bool";
                            break;
                        case "tinyint":
                            keypropertyOutput = "byte";
                            break;
                        case "image":
                            keypropertyOutput = "byte[]";
                            break;
                        case "binary":
                            keypropertyOutput = "byte[]";
                            break;
                        default:
                            keypropertyOutput = "string";
                                break;
                    }
                    //可为null且不是string（就是值类型）可以加?
                    if (MyKeyTable.Rows[keyi]["isnullable"].ToString()=="1"&& keypropertyOutput!="string")
                    {
                        if (keypropertyOutput == "byte[]")
                        {
                            keypropertyOutput = "byte?[]";
                        }
                        else
                        {
                            keypropertyOutput = keypropertyOutput + "?";
                        }
                    }
#>
                    public  <#=keypropertyOutput#>  <#=MyKeyTable.Rows[keyi]["keyname"].ToString()#>  { get; set; }
<#
                }
#>
    }
}
<#              //代码结束
                manager.EndBlock();
        MySqlConnection.Close();
            }
#>
<# manager.Process(true); #>